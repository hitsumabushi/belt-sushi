swagger: "2.0"
info:
  description: Hikyaku is a simple workflow system for automation
  title: Hikyaku
  version: 1.0.0
schemes:
- http
consumes:
- application/json
- application/org.hitsumabushi.hikyaku.v1+json
produces:
- application/json
- application/org.hitsumabushi.hikyaku.v1+json
paths:
  /suites:
    get:
      tags:
        - suites
      parameters:
        - name: since
          in: query
          type: integer
          format: int64
        - name: limit
          in: query
          type: integer
          format: int32
          default: 20
      responses:
        200:
          description: list all suites
          schema:
            type: array
            items:
              $ref: '#/definitions/Suite'
        default:
          description: generic error response
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - suites
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Suite'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Suite'
        default:
          description: error response
          schema:
            $ref: '#/definitions/Error'
  /suites/{id}:
    parameters:
      - type: string
        name: id
        in: path
        required: true
    put:
      tags:
        - suites
      operationId: updateOne
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Suite'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Suite'
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - suites
      operationId: destroyOne
      responses:
        204:
          description: Deleted
        default:
          description: error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Suite:
    type: object
    required:
      - root
      - end
    properties:
      id:
        type: string
        readOnly: true
      state:
        type: integer
        format: int64
      completed:
        type: boolean
      history:
        type: array
        items:
          $ref: '#/definitions/Action'
      root:
        $ref: '#/definitions/Root'
      step:
        type: array
        items:
          $ref: '#/definitions/Step'
      end:
        $ref: '#/definitions/End'
  Action:
    type: object
    properties:
      person:
        type: string
      result:
        type: string
  Root:
    type: object
    required:
      - next_steps
      - assign
    properties:
      id:
        type: string
        readOnly: true
      next_steps:
        type: array
        items:
          type: string
      #next_steps:
      #  type: array
      #  items:
      #    $ref: '#/definitions/Step'
      assign:
        type: string
  Step:
    type: object
    required:
      - assign
    properties:
      id:
        type: string
        readOnly: true
      next_steps:
        type: array
        items:
          type: string
          # $ref: '#/definitions/Step'
      previous_steps:
        type: array
        items:
          type: string
          # $ref: '#/definitions/Step'
      assign:
        type: string
  End:
    type: object
    required:
      - previous_steps
      - assign
    properties:
      id:
        type: string
        readOnly: true
      previous_steps:
        type: array
        items:
          type: string
          # $ref: '#/definitions/Step'
      assign:
        type: string
  Error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
